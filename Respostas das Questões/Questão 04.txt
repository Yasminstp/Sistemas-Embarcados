Para todas as questões, compile-as com o gcc e execute-as via terminal.

1. Crie um código em C para escrever "Ola mundo!" em um arquivo chamado ola_mundo.txt'.



#include <stdio.h>
#include <stdlib.h>

int main(){

//criando variavel ponteiro para o arquivo
    FILE *fp;
    char string[] = "Ola mundo!";
    int i;

    fp = fopen("ola_mundo.txt", "w");

    if(fp == NULL)
    {
        printf("Erro. O arquivo não foi aberto.\n");
        exit(0);
    }

    for (i = 0; string[i]!='\0'; i++)
    {
        putc(string[i], fp);

    }
        fclose(fp);

	return 0;

}


2. Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':

$ ./ola_usuario_1
$ Digite o seu nome: Eu
$ Digite a sua idade: 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos


#include <stdio.h>
#include <stdlib.h>

int main (){

	FILE *fp;
	char string [100];
	int idade;

	fp= fopen("Eu.txt","w");
	if (fp == NULL)
	{
		printf("Erro. O arquivo não foi aberto.\n");
		exit(1);
	}

	printf("Digite seu nome:");
	scanf(" %s", string);

	printf("Digite seu idade:");
	scanf("%d", &idade);

	fprintf(fp,"Nome: %s.\nIdade: %d.\n", string, idade);

	fclose (fp);

	return 0;

}


3. Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
$ ./ola_usuario_2 Eu 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


int main (int argc, char*argv[])
{

	FILE *fp;
	char nome[150] = "Nome: ";
	char idade[150] = "Idade: ";
	int i=0;

	fp = fopen("Eu1.txt","w");
	if (fp == NULL)
	{
		printf("Erro. O arquivo não foi aberto.\n");
		exit(1);
	}

        strcat (nome, argv[1]);
        strcat (idade, argv[2]);

        for (i=0; nome[i]; i++)
            putc(nome[i],fp);
            putc('\n',fp);

        for (i=0; idade[i]; i++)
            putc( idade[i],fp);
            fclose(fp);

        return 0;
}



4. Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo: int tam_arq_texto(char *nome_arquivo); Salve esta função em um arquivo separado chamado 'bib_arqs.c'. Salve o protótipo em um arquivo chamado 'bib_arqs.h'. Compile 'bib_arqs.c' para gerar o objeto 'bib_arqs.o'.

#include <stdio.h>
#include <stdlib.h>

int tam_arq_texto (char *nome_arquivo)
{

	FILE *aqvo;
	long tamanho;

	aqvo = fopen(nome_arquivo, "r");


	if (aqvo != NULL)
	{
		fseek (aqvo, 0, SEEK_END);
		tamanho = ftell(aqvo);

	printf("O arquivo %s possui um tamanho de %ld bytes.\n", nome_arquivo, tamanho);
	}

	else
	{
		printf("Erro. Arquivo não existe.\n");
	}

	fclose(aqvo);

	return tamanho;
}





5. Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo: void le_arq_texto(char *nome_arquivo, char *conteúdo); Repare que o conteúdo do arquivo é armazenado no vetor conteudo[]. Ou seja, ele é passado por referência. Salve esta função no mesmo arquivo da questão 4, chamado 'bib_arqs.c'. Salve o protótipo no arquivo 'bib_arqs.h'. Compile 'bib_arqs.c' novamente para gerar o objeto 'bib_arqs.o'.





6. Crie um código em C que copia a funcionalidade básica do comando cat: escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':

$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./cat_falsificado ola.txt
$ Ola mundo cruel! Ola universo ingrato!




7. Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./busca_e_conta Ola ola.txt
$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.



